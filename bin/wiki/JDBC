# 簡介
## 常见的 JDBC 组件
JDBC 的 API 提供了以下接口和类：<br>
**DriverManager** ：这个类管理一系列数据库驱动程序。匹配连接使用通信子协议从 JAVA 应用程序中请求合适的数据库驱动程序。识别 JDBC 下某个子协议的第一驱动程序将被用于建立数据库连接。<br>
**Driver** : 这个接口处理与数据库服务器的通信。你将很少直接与驱动程序互动。相反，你使用 DriverManager 中的对象，它管理此类型的对象。它也抽象与驱动程序对象工作相关的详细信息。<br>
**Connection** : 此接口具有接触数据库的所有方法。该连接对象表示通信上下文，即，所有与数据库的通信仅通过这个连接对象进行。<br>
**Statement** : 使用创建于这个接口的对象将 SQL 语句提交到数据库。除了执行存储过程以外，一些派生的接口也接受参数。<br>
**ResultSet** : 在你使用语句对象执行 SQL 查询后，这些对象保存从数据获得的数据。它作为一个迭代器，让您可以通过它的数据来移动。<br>
**SQLException** : 这个类处理发生在数据库应用程序的任何错误。

# 创建 JDBC 应用程序
## 构建一个 JDBC 应用程序包括以下六个步骤

- 导入数据包：需要你导入含有需要进行数据库编程的 JDBC 类的包。大多数情况下，使用 import java.sql. 就足够了。

- 注册 JDBC 驱动器：需要你初始化一个驱动器，以便于你打开一个与数据库的通信通道。

- 打开连接：需要使用 DriverManager.getConnection() 方法创建一个 Connection 对象，它代表与数据库的物理连接。

- 执行查询：需要使用类型声明的对象建立并提交一个 SQL 语句到数据库。

- 提取结果数据：要求使用适当的 ResultSet.getXXX() 方法从结果集中检索数据。

- 清理环境：依靠 JVM 的垃圾收集来关闭所有需要明确关闭的数据库资源。
